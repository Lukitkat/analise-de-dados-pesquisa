# -*- coding: utf-8 -*-
"""UniforPsico.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_rXQaOgiQSdM4yqfS2Dry9_9zi1gD1Jy
"""

import pandas as pd
import numpy as np
import re
import unicodedata

"""# 1. **Leitura dos dados**"""

df = pd.read_csv('https://raw.githubusercontent.com/Lukitkat/analise-de-dados-pesquisa/refs/heads/main/Forms%20_ORIGINAL_%20(respostas).csv')

"""# 2. **Dicionario de dados e limpeza**"""

df = df.drop(columns=df.columns[:2])
df = df.drop(df.columns[-1], axis=1)

mapeamentos = {
    "Qual a sua idade?": {
        "18 a 25": 1, "25 a 30": 2, "30 a 40": 3, "40 ou mais": 4
    },
    "Como você se identifica?": {
        "Branco(a)": 1, "Preto(a)": 2, "Pardo(a)": 3, "Amarelo(a)": 4
    },
    "Qual o seu nível de escolaridade?": {
        "Fundamental incompleto": 1, "Fundamental completo": 2, "Médio incompleto": 3,
        "Médio completo": 4, "Médio cursando": 5, "Superior incompleto": 6,
        "Superior completo": 7, "Superior cursando": 8, "Pós graduação": 9
    },
    "Há quanto tempo você trabalha em shopping?": {
        "Menos de 1 ano": 1, "1 a 2 anos": 2, "3 a 5 anos": 3, "5 a 10 anos": 4,
        "10 a 15 anos": 5, "15 anos ou mais": 6
    },
    "Em qual área você trabalha?": {
        "Comércio": 1, "Segurança": 2, "Serviços gerais": 3, "Alimentação": 4, "Administrativo": 5
    },
    "Quantas horas por semana você trabalha no total?": {
        "20 a 25 horas semanais": 1, "25 a 30 horas semanais": 2, "30 a 35 horas semanais": 3,
        "35 a 40 horas semanais": 4, "40 a 44 horas semanais": 5, "44 horas ou mais": 6
    },
    "Você tem outro trabalho?": {
        "Sim": 1, "Não": 2
    },
    "Você possui dependentes financeiros? ": {
        "Sim": 1, "Não": 2
    },
    "Sua residência é:": {
        "Alugada": 1, "Própria": 2
    },
    "Qual a distância de sua residência ao seu lugar de trabalho?": {
        "0 a 5 km": 1, "5 a 10 km": 2, "10 a 15 km": 3, "15 a 20 km": 4, "20 km ou mais": 5,
        "Indígena": 6
    },
    "Qual é a sua identidade de gênero?": {
        "Homem cis": 1, "Homem trans": 2, "Mulher cis": 3, "Mulher trans": 4,
        "Não binário": 5, "Prefiro não responder": 6
    },
    "Qual é a sua sexualidade?": {
        "Heterossexual": 1, "Homossexual": 2, "Bissexual": 3,
        "Panssexual": 4, "Assexual": 5, "Prefiro não responder": 6
    }
}

for coluna, dicionario in mapeamentos.items():

  if coluna in df.columns:

    df[coluna] = df[coluna].map(dicionario)

df.describe()

def extrair_numero(texto):

  if isinstance(texto, str):

    match = re.search(r"\((\d+)\)", texto)
    return int(match.group(1)) if match else texto

  return texto

df = df.applymap(extrair_numero)

df.isnull().sum()

def limpar_nome_coluna(nome):

  # Remover acentos
  nome = unicodedata.normalize('NFKD', nome).encode('ASCII', 'ignore').decode('utf-8')

  # Substituir caracteres não alfanuméricos por "_"
  nome = re.sub(r'[^a-zA-Z0-9]+', '_', nome)

  # Remover underscores duplicados ou no início/fim
  nome = re.sub(r'_+', '_', nome).strip('_')

  # Limitar a 64 caracteres e deixar tudo em minúsculo
  return nome[:64].lower()

df.columns = [limpar_nome_coluna(col) for col in df.columns]

df_final = df.dropna()

df_final.to_csv('dicionario.csv', index=False)

"""# 3. **Análise descritiva dos dados**"""

df_final.describe()

df_final.info()

import scipy

# Correlações de Pearson

df_final.corr()

# Maiores correlações

corr_matrix = df_final.corr()

corr_matrix_no_self = corr_matrix.where(~np.eye(corr_matrix.shape[0], dtype=bool))

corr_unstacked = corr_matrix_no_self.abs().unstack()

corr_unstacked = corr_unstacked.drop_duplicates()

sorted_corrs = corr_unstacked.sort_values(ascending=False)

top_n = 10
print(sorted_corrs.head(top_n))

df_final.apply(df.value_counts)

porcentagens = df_final.apply(lambda col: col.value_counts(normalize=True) * 100)
porcentagens

df2_mode1 = df_final.mode(axis=0, numeric_only=True, dropna=True)
df2_mode2 = df2_mode1.head(1)
df2_mode = df2_mode2.T

df2_range = df_final.max()-df_final.min()

Q1 = df_final.quantile(0.25)
Q3 = df_final.quantile(0.75)
df2_IQR = Q3-Q1

df_summary = pd.DataFrame()
df_summary["Min"] = df_final.min()
df_summary["Max"] = df_final.max()
df_summary["Mode"] = df2_mode
df_summary["Median"] = df_final.median()
df_summary["Mean"] = df_final.mean()
df_summary["Range"] = df2_range
df_summary["IQR"] = df2_IQR
df_summary["Std Dev"] = df_final.std()
print(df_summary)

"""# 4. **Análise inferencial**

## 2 groups with different population:

### Nivel de estresse:
"""

from scipy.stats import mannwhitneyu

from scipy.stats import shapiro

"""#### Qual é a sua identidade de genero (Homem cis e mulher cis)"""

df1 = df_final[df_final['qual_e_a_sua_identidade_de_genero'] == 1] # Homem cis
df2 = df_final[df_final['qual_e_a_sua_identidade_de_genero'] == 3] # Mulher cis

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Tipo de residencia (propria ou alugada)"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['sua_residencia_e'])
mean_ranks = df_final.groupby('sua_residencia_e')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['sua_residencia_e'] == 1] # Alugada
df2 = df_final[df_final['sua_residencia_e'] == 2] # Propria

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Tem outro trabalho (sim ou nao)"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['voce_tem_outro_trabalho'])
mean_ranks = df_final.groupby('voce_tem_outro_trabalho')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['voce_tem_outro_trabalho'] == 1] # Sim
df2 = df_final[df_final['voce_tem_outro_trabalho'] == 2] # Nao

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Possui dependentes financeiros? (Sim ou nao)"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['voce_possui_dependentes_financeiros'])
mean_ranks = df_final.groupby('voce_possui_dependentes_financeiros')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['voce_possui_dependentes_financeiros'] == 1] # Sim
df2 = df_final[df_final['voce_possui_dependentes_financeiros'] == 2] # Nao

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""### Quantidade de vezes que consegue ir ao medico ou cuidar da saude:

#### Genero (Homem cis e mulher cis)
"""

from scipy.stats import ttest_ind

df1 = df_final[df_final['qual_e_a_sua_identidade_de_genero'] == 1] # HOmem cis
df2 = df_final[df_final['qual_e_a_sua_identidade_de_genero'] == 3] # Mulher cis

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Tipo de residencia (alugada ou propria)"""

df1 = df_final[df_final['sua_residencia_e'] == 1] # Alugada
df2 = df_final[df_final['sua_residencia_e'] == 2] # Propria

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Tem outro trabalho (sim ou nao)"""

df1 = df_final[df_final['voce_tem_outro_trabalho'] == 1] # Sim
df2 = df_final[df_final['voce_tem_outro_trabalho'] == 2] # Nao

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Possui dependentes financeiros (sim ou nao)"""

df1 = df_final[df_final['voce_possui_dependentes_financeiros'] == 1] # Sim
df2 = df_final[df_final['voce_possui_dependentes_financeiros'] == 2] # Nao

shapiro(df1)

shapiro(df2)

mannwhitneyu(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""## 3 or more groups with different population:"""

from scipy.stats import kruskal

"""### Nivel de estresse:

#### Qual é a sua idade
"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['qual_a_sua_idade'])
mean_ranks = df_final.groupby('qual_a_sua_idade')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['qual_a_sua_idade'] == 1]
df2 = df_final[df_final['qual_a_sua_idade'] == 2]
df3 = df_final[df_final['qual_a_sua_idade'] == 3]
df4 = df_final[df_final['qual_a_sua_idade'] == 4]

kruskal(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Escolaridade"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['qual_o_seu_nivel_de_escolaridade'])
mean_ranks = df_final.groupby('qual_o_seu_nivel_de_escolaridade')['Rank'].mean()
print(mean_ranks)

df4 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 4]
df8 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 8]
df6 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 6]
df7 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 7]

kruskal(df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df8["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df6["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df7["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### tempo de trabalho"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['ha_quanto_tempo_voce_trabalha_em_shopping'])
mean_ranks = df_final.groupby('ha_quanto_tempo_voce_trabalha_em_shopping')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 1]
df2 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 2]
df3 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 3]
df4 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 4]
df5 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 5]
df6 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 6]

kruskal(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df5["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df6["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### trabalho por semana"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['quantas_horas_por_semana_voce_trabalha_no_total'])
mean_ranks = df_final.groupby('quantas_horas_por_semana_voce_trabalha_no_total')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 1]
df2 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 2]
df3 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 3]
df4 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 4]
df5 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 5]
df6 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 6]

kruskal(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df5["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df6["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Distancia do trabalho"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'])
mean_ranks = df_final.groupby('qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 1]
df2 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 2]
df3 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 3]
df4 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 4]
df5 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 5]

kruskal(df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df5["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Fatal de posibilidade de desenvolvimento e promocao"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'])
mean_ranks = df_final.groupby('2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 1]
df2 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 2]
df3 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 3]
df4 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 4]
df0 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 0]

kruskal(df0["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

from pandas import crosstab
import matplotlib.pyplot as plt

"""#### Atitudes negativas dos clientes"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'])
mean_ranks = df_final.groupby('2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 1]
df2 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 2]
df3 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 3]
df4 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 4]
df0 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 0]

kruskal(df0["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Falta de tempo para uma boa relacao com os parentes"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'])
mean_ranks = df_final.groupby('2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 1]
df2 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 2]
df3 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 3]
df4 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 4]
df0 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 0]

kruskal(df0["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Trabalhar muitas horas seguidas"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['2_5_trabalhar_muitas_horas_seguidas'])
mean_ranks = df_final.groupby('2_5_trabalhar_muitas_horas_seguidas')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 1]
df2 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 2]
df3 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 3]
df4 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 4]
df0 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 0]

kruskal(df0["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Viver com os recursos e salarios"""

from scipy.stats import rankdata

df_final['Rank'] = rankdata(df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'])
mean_ranks = df_final.groupby('2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho')['Rank'].mean()
print(mean_ranks)

df1 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 1]
df2 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 2]
df3 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 3]
df4 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 4]
df0 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 0]

kruskal(df0["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""#### Falta de condicoes de trabalho"""

df1 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 1]
df2 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 2]
df3 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 3]
df4 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 4]
df0 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 0]

kruskal(df0["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df3["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df4["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"])

"""### Quantidade de vezes que consegue ir ao medico ou se cuidar

#### Idade
"""

df1 = df_final[df_final['qual_a_sua_idade'] == 1] #
df2 = df_final[df_final['qual_a_sua_idade'] == 2] #
df3 = df_final[df_final['qual_a_sua_idade'] == 3] #
df4 = df_final[df_final['qual_a_sua_idade'] == 4] #

kruskal(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Escolaridade"""

df4 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 4] #
df8 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 8] #
df6 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 6] #
df7 = df_final[df_final['qual_o_seu_nivel_de_escolaridade'] == 7] #

kruskal(df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df8["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df6["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df7["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### tempo de trabalho"""

df1 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 1]
df2 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 2]
df3 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 3]
df4 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 4]
df5 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 5]
df6 = df_final[df_final['ha_quanto_tempo_voce_trabalha_em_shopping'] == 6]

kruskal(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df5["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df6["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### trabalho por semana"""

df1 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 1]
df2 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 2]
df3 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 3]
df4 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 4]
df5 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 5]
df6 = df_final[df_final['quantas_horas_por_semana_voce_trabalha_no_total'] == 6]

kruskal(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df5["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df6["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Distancia do trabalho"""

df1 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 1]
df2 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 2]
df3 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 3]
df4 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 4]
df5 = df_final[df_final['qual_a_distancia_de_sua_residencia_ao_seu_lugar_de_trabalho'] == 5]

kruskal(df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df5["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Fatal de posibilidade de desenvolvimento e promocao"""

df1 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 1]
df2 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 2]
df3 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 3]
df4 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 4]
df0 = df_final[df_final['2_1_a_falta_de_possibilidades_de_desenvolvimento_e_promocao_na_c'] == 0]

kruskal(df0["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df1["1_1_em_termos_gerais_a_minha_atividade_profissional_provoca_me"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Atitudes negativas dos clientes"""

df1 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 1]
df2 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 2]
df3 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 3]
df4 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 4]
df0 = df_final[df_final['2_2_atitudes_negativas_relativamente_ao_nosso_trabalho_por_parte'] == 0]

kruskal(df0["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Falta de tempo para uma boa relacao com os parentes"""

df1 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 1]
df2 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 2]
df3 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 3]
df4 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 4]
df0 = df_final[df_final['2_3_falta_de_tempo_para_manter_uma_boa_relacao_com_as_pessoas_ma'] == 0]

kruskal(df0["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Trabalhar muitas horas seguidas"""

df1 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 1]
df2 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 2]
df3 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 3]
df4 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 4]
df0 = df_final[df_final['2_5_trabalhar_muitas_horas_seguidas'] == 0]

kruskal(df0["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Viver com os recursos e salarios"""

df1 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 1]
df2 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 2]
df3 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 3]
df4 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 4]
df0 = df_final[df_final['2_6_viver_com_os_recursos_financeiros_salario_de_que_disponho'] == 0]

kruskal(df0["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])

"""#### Falta de condicoes de trabalho"""

df1 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 1]
df2 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 2]
df3 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 3]
df4 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 4]
df0 = df_final[df_final['2_7_falta_de_condicoes_de_trabalho'] == 0]

kruskal(df0["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df1["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df2["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df3["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"], df4["com_que_frequencia_voce_consegue_ir_ao_medico_para_check_ups_ou_"])